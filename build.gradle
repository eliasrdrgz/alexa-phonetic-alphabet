import com.amazonaws.services.lambda.model.Runtime
import com.amazonaws.services.lambda.model.InvocationType
import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask
import jp.classmethod.aws.gradle.lambda.AWSLambdaInvokeTask

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'jp.classmethod.aws:gradle-aws-plugin:0.22'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'jp.classmethod.aws.lambda'

group = 'phonetic.alphabet'
version = '1.0'

compileJava {
    targetCompatibility = 1.8
    sourceCompatibility = 1.8
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.amazon.alexa:ask-sdk:2.9.2'
    
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    compile 'com.amazonaws:aws-lambda-java-log4j:1.0.0'
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

aws {
    region = 'eu-west-1'
}

task deploy(type: AWSLambdaMigrateFunctionTask, dependsOn: build) {
    functionName = "alexa-phonetic-alphabet"
    handler = "phonetic.alphabet.PhoneticAlphabetStreamHandler"
    role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
    runtime = Runtime.Java8
    zipFile = shadowJar.archivePath
    memorySize = 512
    timeout = 60
}

task invoke(type: AWSLambdaInvokeTask){
    functionName = "alexa-phonetic-alphabet"
    invocationType = InvocationType.RequestResponse
    payload = '{ "msg": "pide a alfabeto fonético deletrea fonéticamente hola" }'
    doLast {
        println "Lambda function result " + new String(invokeResult.payload.array(), "UTF-8")
    }
}

build.dependsOn shadowJar

